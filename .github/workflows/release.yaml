name: release
env:
  FETCH_DEPTH: 1
on:

  workflow_dispatch:

  push:
    tags: [ 'v*.*.*' ]
jobs:
  dist:
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            code-target: win32-x64
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            code-target: win32-arm64
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64
          - os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            code-target: linux-arm64
          - os: ubuntu-20.04
            target: arm-unknown-linux-gnueabihf
            code-target: linux-armhf
          - os: macos-12
            target: x86_64-apple-darwin
            code-target: darwin-x64
          - os: macos-12
            target: aarch64-apple-darwin
            code-target: darwin-arm64

    name: dist (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    steps:
      
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
         python-version: '3.10'       

      - uses: actions/setup-python@v5 
        with:
          python-version: 'pypy3.10'          

      - name: Install toolchain dependencies
        if: matrix.container == 'rockylinux:8'
        shell: bash
        run: |
          dnf install -y gcc

      - name: Update apt repositories
        if: contains(matrix.os, 'ubuntu')
        run: sudo apt-get update

      - name: Install AArch64 target toolchain
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: sudo apt-get install gcc-aarch64-linux-gnu

      - name: Install ARM target toolchain
        if: matrix.target == 'arm-unknown-linux-gnueabihf'
        run: sudo apt-get install gcc-arm-linux-gnueabihf
        

      - name: Npm install
        run: npm install
        working-directory: editors/code

      - name: Build extension
        run: npm run compile3
        working-directory: editors/code

      - if: contains(matrix.code-target, 'linux')
        run: sh ./scripts/update-paths.sh && mkdir ../../dist
        working-directory: editors/code

      - if: contains(matrix.target, 'darwin')
        run: sh ./scripts/update-paths-darwin.sh && mkdir ../../dist
        working-directory: editors/code

      - if: contains(matrix.code-target, 'win32')
        shell: pwsh
        run: ./scripts/update-paths-win32.ps1 && md ../../dist -ea 0
        working-directory: editors/code


      - name: Package extension
        if: matrix.code-target
        run: npx vsce package -o ../../dist/asyncflows-lsp-${{ matrix.code-target }}.vsix --target ${{ matrix.code-target }}
        working-directory: editors/code


      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-asyncflows-lsp-${{ matrix.code-target }}
          path: ./dist

  publish:
    name: publish
    runs-on: ubuntu-latest
    needs: ["dist"]
    steps:
      - name: Install Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}        



      - uses: actions/download-artifact@v4
        with: 
          name: dist-asyncflows-lsp-win32-x64
          path: dist
      - uses: actions/download-artifact@v4
        with: 
          name: dist-asyncflows-lsp-win32-arm64
          path: dist
      - uses: actions/download-artifact@v4
        with: 
          name: dist-asyncflows-lsp-linux-x64
          path: dist
      - uses: actions/download-artifact@v4
        with: 
          name: dist-asyncflows-lsp-linux-arm64
          path: dist
      - uses: actions/download-artifact@v4
        with: 
          name: dist-asyncflows-lsp-linux-armhf
          path: dist
      - uses: actions/download-artifact@v4
        with: 
          name: dist-asyncflows-lsp-darwin-x64
          path: dist
      - uses: actions/download-artifact@v4
        with: 
          name: dist-asyncflows-lsp-darwin-arm64
          path: dist
          
      - name: dist-asyncflows-lsp-Dist directory
        run: ls -al ./dist

      - name: Publish Extension (Code Marketplace, release)
        working-directory: editors/code
        run: npx vsce publish --pat ${{ secrets.MARKETPLACE_TOKEN }} --packagePath ../../dist/asyncflows-lsp-*.vsix      
      
